[{"/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/index.js":"1","/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/App.js":"2","/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/components/Login.js":"3","/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/components/Signup.js":"4","/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/components/Todo.js":"5"},{"size":569,"mtime":1699508780166,"results":"6","hashOfConfig":"7"},{"size":597,"mtime":1699508773850,"results":"8","hashOfConfig":"7"},{"size":2266,"mtime":1699508768318,"results":"9","hashOfConfig":"7"},{"size":2183,"mtime":1699507711964,"results":"10","hashOfConfig":"7"},{"size":4575,"mtime":1699507717760,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"afpw43",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/index.js",[],[],"/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/App.js",["30","31"],[],"import React from 'react';\nimport { BrowserRouter as Router, Route,Routes, Switch } from 'react-router-dom';\n\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport Todo from './components/Todo';\n\nfunction App() {\n    return (\n        // <Router>\n          <div className=\"App\">\n            <Routes>\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/\" element={<Login />} />\n              <Route path=\"/index\" element={<Todo />} />\n            </Routes>\n          </div>\n        //  </Router>\n      );\n}\n\nexport default App;\n","/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/components/Login.js",["32","33"],[],"\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; \nimport styles from '../css/styles.css';\n\n\nconst Login = () => {\n  const [loginData, setLoginData] = useState({ email: '', password: '' });\n  const navigate = useNavigate(); \n\n  const handleLoginClick = async () => {\n    try {\n      const response = await fetch('https://nm-backend-ctri.onrender.com/check', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(loginData),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log(result + \"red\");\n        if (result.result == true) {\n          console.log(\"workignn\");\n          localStorage.setItem(\"userEmail\", loginData.email);\n          localStorage.setItem('userUid',result.id)\n          navigate('/index');\n        } else {\n          alert(\"incorrect value \");\n\n          console.log('Incorrect login data');\n        }\n      } else {\n        alert(\"no data found\");\n\n        console.log('Network or server error');\n      }\n    } catch (error) {\n      alert(\"no value present\");\n\n      console.error('An unexpected error occurred', error);\n    }\n  };\n\n  const goToSignup = () => {\n    navigate('/signup'); \n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1 className='header-h1'>Login</h1>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          placeholder=\"Enter your email\"\n          required\n          onChange={(e) => setLoginData({ ...loginData, email: e.target.value })}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          placeholder=\"Enter your password\"\n          required\n          onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\n        />\n      </div>\n      <button type=\"submit\" className=\"btn form-group\" onClick={handleLoginClick}>\n        Login\n      </button>\n      <button onClick={goToSignup} className=\"btn\">Signup</button> \n    </div>\n  );\n};\n\nexport default Login;\n","/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/components/Signup.js",[],[],"/home/divum/Documents/project/Nm/new/Task3_interactive_frontend/todo-interactive/src/components/Todo.js",["34"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport '../css/TodoList.css';\n\nconst TodoList = ({ setPage }) => {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [editingTask, setEditingTask] = useState(null);\n  const [editedData, setEditedData] = useState('');\n  const [editedStatus, setEditedStatus] = useState(false);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const navigate = useNavigate();\n\n\n  const fetchTasks = () => {\n    const email = localStorage.getItem('userEmail');\n\n    fetch(`https://nm-backend-ctri.onrender.com/getTasks/${email}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setTasks(data);\n        if (data.length > 0) {\n          console.log(data.length);\n          const userUid = data[0].uid;\n          localStorage.setItem('userUid', userUid);\n        } else {\n          console.log(\"no todo\");\n        }\n      })\n      .catch((error) => console.error('Error fetching tasks:', error));\n  };\n\n  const addTask = () => {\n    const userId = localStorage.getItem('userId');\n\n    fetch('https://nm-backend-ctri.onrender.com/addTodo', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        data: newTask,\n        status: false,\n        userCredentials: {\n          id: localStorage.getItem(\"userUid\"),\n        },\n      }),\n    })\n      .then(() => {\n        setNewTask('');\n        fetchTasks();\n      })\n      .catch((error) => console.error('Error adding task:', error));\n  };\n\n  const editTask = (task) => {\n    setEditingTask(task.taskId);\n    setEditedData(task.data);\n    setEditedStatus(task.status);\n  };\n\n  const toggleStatus = (task) => {\n    setEditedData(task.data);\n    setEditedStatus(!task.status);\n  };\n\n  const saveTask = () => {\n    const updatedTask = {\n      todoId: editingTask,\n      data: editedData,\n      status: editedStatus,\n      userCredentials: {\n        id: localStorage.getItem(\"userUid\"),\n      },\n    };\n    console.log(updatedTask);\n\n    fetch(`https://nm-backend-ctri.onrender.com/updateTask`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedTask),\n    })\n      .then(() => {\n        setEditingTask(null);\n        setEditedData('');\n        setEditedStatus(false);\n        fetchTasks();\n      })\n      .catch((error) => console.error('Error updating task:', error));\n  };\n\n  const deleteTask = (task) => {\n    fetch(`https://nm-backend-ctri.onrender.com/deleteTasks/${task.taskId}`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        fetchTasks();\n      })\n      .catch((error) => console.error('Error deleting task:', error));\n  };\n\n  const goToLogin = () => {\n    localStorage.clear();\n    navigate('/');\n  };\n\n  return (\n    <div className=\"todo-list-container\">\n      <h1>Todo List</h1>\n      <button type='button' className='logout' onClick={goToLogin}>logout</button>\n      <div className=\"task-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a new task\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button onClick={addTask}>Add</button>\n      </div>\n\n      <ul className=\"task-list\">\n        {tasks.length===0 ? (<>\n        <p>No task</p>\n        </>) : (<>\n        {/* {console.log(tasks[0].data,\"if\")} */}\n          {tasks.map((task) => (\n            <li key={task.taskId} className=\"task-item\">\n              <span\n                className={task.status ? 'completed' : 'not-completed'}\n                onClick={() => toggleStatus(task)}\n              >\n                {task.data}\n              </span>\n              <div className=\"task-actions\">\n                <button onClick={() => editTask(task)}>Edit</button>\n                <button onClick={() => deleteTask(task)}>Delete</button>\n              </div>\n            </li>\n          ))}\n        </>)}\n      </ul>\n      {editingTask !== null && (\n        <div className=\"edit-task\">\n          <input\n            type=\"text\"\n            value={editedData}\n            onChange={(e) => setEditedData(e.target.value)}\n          />\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={editedStatus}\n              onChange={() => setEditedStatus(!editedStatus)}\n            />\n            Completed\n          </label>\n          <button onClick={saveTask}>Save</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoList;\n",{"ruleId":"35","severity":1,"message":"36","line":2,"column":27,"nodeType":"37","messageId":"38","endLine":2,"endColumn":33},{"ruleId":"35","severity":1,"message":"39","line":2,"column":49,"nodeType":"37","messageId":"38","endLine":2,"endColumn":55},{"ruleId":"35","severity":1,"message":"40","line":4,"column":8,"nodeType":"37","messageId":"38","endLine":4,"endColumn":14},{"ruleId":"41","severity":1,"message":"42","line":24,"column":27,"nodeType":"43","messageId":"44","endLine":24,"endColumn":29},{"ruleId":"35","severity":1,"message":"45","line":39,"column":11,"nodeType":"37","messageId":"38","endLine":39,"endColumn":17},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'styles' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'userId' is assigned a value but never used."]